// Generated by CoffeeScript 1.12.7
(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  this.WorkerPage = (function(superClass) {
    extend(WorkerPage, superClass);

    function WorkerPage(workerId) {
      WorkerPage.__super__.constructor.call(this);
      this.worker = null;
      WorkerService.get(workerId, null, this, this._loadedWorker, ajaxCallbackPrintMessage);
      this.createExpenseDialog = new CreateExpenseDialog();
      this.createWorkerDialog = new CreateWorkerDialog();
    }

    WorkerPage.prototype.destroy = function() {
      WorkerPage.__super__.destroy.call(this);
      this.createExpenseDialog.destroy();
      this.createExpenseDialog = null;
      this.createWorkerDialog.destroy();
      this.createWorkerDialog = null;
      return this.worker = null;
    };

    WorkerPage.prototype._clickEventHandler = function(event) {
      var target;
      target = $(event.target);
      if (closest(target, '.js--back--button')) {
        MainNavigation.back();
        return;
      }
      if (closest(target, '.js--block--worker')) {
        this._toggleBlockUser();
        return;
      }
      if (closest(target, '.js--create--expense')) {
        this.createExpenseDialog.show(this.worker);
        return;
      }
      if (closest(target, '.js--worker--expenses')) {
        window.location.href = "#expenses/" + this.worker.id;
        return;
      }
      if (closest(target, '.js--edit--worker')) {
        this.createWorkerDialog.show(this, this.worker);
      }
    };

    WorkerPage.prototype._loadedWorker = function(response) {
      this.worker = response.data;
      return this.pageHTML();
    };

    WorkerPage.prototype._toggleBlockUserText = function() {
      var text;
      text = 'Neaktivan';
      if (this.worker.active) {
        text = 'Aktivan';
      }
      return text;
    };

    WorkerPage.prototype._customHTML = function() {
      var html, innerHTML;
      if (this.worker) {
        innerHTML = this._toggleBlockUserText();
        html = "<nav class='nav justify-content-end header pt-3'> <span class='nav-link span-a back-button js--back--button'>Nazad</span> <span class='nav-link span-a js--edit--worker'>Izmeni</span> <span class='nav-link span-a js--block--worker'>" + innerHTML + "</span> <span class='nav-link span-a js--worker--expenses'>Rashodi</span> <span class='nav-link span-a js--create--expense'>Kreiraj rashod</span> </nav>";
        html += ComponentsUtils.userDetailsFilledHTML(this.worker);
        return html;
      } else {
        return ComponentsUtils.emptyState('Korisnik nije pronadjen :(');
      }
    };

    WorkerPage.prototype._toggleBlockUser = function() {
      this.worker.active = !this.worker.active;
      $(".js--block--worker").html(this._toggleBlockUserText());
      return WorkerService.toggleBlockWorker(this.worker.id, null, this, globalSuccessMessage, globalErrorMessage);
    };

    WorkerPage.prototype.createWorkerDialogPositiveAction = function(worker) {
      this.worker = worker;
      return this.pageHTML();
    };

    return WorkerPage;

  })(AbstractPage);

}).call(this);
