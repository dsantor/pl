// Generated by CoffeeScript 1.12.7
(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  this.CreateExpenseDialog = (function(superClass) {
    extend(CreateExpenseDialog, superClass);

    function CreateExpenseDialog() {
      CreateExpenseDialog.__super__.constructor.call(this);
    }

    CreateExpenseDialog.prototype.destroy = function() {
      CreateExpenseDialog.__super__.destroy.call(this);
      this.moneyGivenBy = null;
      this.moneyTook = null;
      this.purpose = null;
      this.moneyGivenAt = null;
      this.sum = null;
      this.parentPage = null;
      this.container.off('keyup', this.keyDownEvent);
      this.keyDownEvent = null;
      return this.userAutoSuggestions = null;
    };

    CreateExpenseDialog.prototype.show = function(parentPage) {
      this.parentPage = parentPage;
      CreateExpenseDialog.__super__.show.call(this);
      this.customHTML();
      this.moneyGivenBy = this.container.find('.js--money--given--by');
      this.moneyTook = this.container.find('.js--money--took');
      this.purpose = this.container.find('.js--purpose');
      this.moneyGivenAt = this.container.find('.js--money--given--at');
      this.sum = this.container.find('.js--sum');
      UserService.getUsers(null, this, this._usersLoaded, ajaxCallbackPrintMessage);
      this.keyDownEvent = this._keyDownEventHandler.bind(this);
      this.container.on('keyup', this.keyDownEvent);
      return this.userAutoSuggestions = this.container.find('.js--user--suggestions');
    };

    CreateExpenseDialog.prototype._usersLoaded = function(response) {
      return this.users = response.data;
    };

    CreateExpenseDialog.prototype.hide = function() {
      return CreateExpenseDialog.__super__.hide.call(this);
    };

    CreateExpenseDialog.prototype.negativeAction = function() {
      return CreateExpenseDialog.__super__.negativeAction.call(this);
    };

    CreateExpenseDialog.prototype.positiveAction = function() {
      var data;
      if (!this._validateForm()) {
        return;
      }
      data = {
        moneyGivenBy: this.moneyGivenBy.attr('data-user-id'),
        moneyTook: this.parentPage.worker.id,
        purpose: this.purpose.val(),
        moneyGivenAt: new Date(this.moneyGivenAt.val()).getTime(),
        sum: this.sum.val()
      };
      ExpenseService.create(data, null, this, this._createSuccess, ajaxCallbackPrintMessage);
      return this.hide();
    };

    CreateExpenseDialog.prototype._createSuccess = function() {
      return FloatingMessage.success("Dažbina uspešno kreirana");
    };

    CreateExpenseDialog.prototype._validateForm = function() {
      var valid, validInput;
      valid = true;
      validInput = this._validateInput(this.moneyGivenBy);
      valid &= validInput;
      validInput = this._validateInput(this.purpose);
      valid &= validInput;
      validInput = this._validateInput(this.moneyGivenAt);
      valid &= validInput;
      validInput = this._validateInput(this.sum);
      valid &= validInput;
      return valid;
    };

    CreateExpenseDialog.prototype._validateInput = function(input) {
      var valid;
      valid = true;
      if (this._valueOf(input.val())) {
        input.removeClass(ComponentsUtils.CSS_INVALID_INPUT);
      } else {
        valid = false;
        input.addClass(ComponentsUtils.CSS_INVALID_INPUT);
      }
      return valid;
    };

    CreateExpenseDialog.prototype._valueOf = function(value) {
      value = value.trim();
      if (!value || value === '---') {
        return null;
      }
      return value;
    };

    CreateExpenseDialog.prototype._customHTML = function() {
      return "<div class='col-7 m-auto p-5 flex'> <div class='container container-padding w-50'> <div class='form-group'> <div class='pos-rel'> <label>Novac uručio*</label> <input type='text' class='form-control js--money--given--by' placeholder='ime i prezime'/> <div class='pos-rel'> <div class='suggestion-container js--user--suggestions pos-abs hide'></div> </div> </div> </div> <div class='form-group'> <label>Namena*</label> <textarea class='form-control js--purpose' placeholder='Novac namenjen za...'/> </div> <div class='form-group'> <label>Suma*</label> <input type='number' class='form-control js--sum' placeholder='din'/> </div> <div class='form-group'> <label>Novac uručen*</label> <input type='date' class='form-control js--money--given--at'/> </div> </div> </div>";
    };

    CreateExpenseDialog.prototype._pageClickEventHandler = function(event) {
      var target;
      target = $(event.target);
      if (closest(target, '.js--user--suggestions')) {
        this._selectUserFromAutoSuggestion(target);
        return;
      }
      return this.userAutoSuggestions.addClass('hide');
    };

    CreateExpenseDialog.prototype._keyDownEventHandler = function(event) {
      var target;
      target = $(event.target);
      if (closest(target, '.js--money--given--by')) {
        this._handlerUserSuggestion();
      }
    };

    CreateExpenseDialog.prototype._selectUserFromAutoSuggestion = function(target) {
      return ComponentsUtils.selectFromAutoSuggestion(target, this.users, 'data-user-id', this.moneyGivenBy, this.userAutoSuggestions);
    };

    CreateExpenseDialog.prototype._handlerUserSuggestion = function() {
      return ComponentsUtils.handleAutoSuggestion(this.moneyGivenBy, 'data-user-id', this.users, this.userAutoSuggestions);
    };

    return CreateExpenseDialog;

  })(AbstractDialog);

}).call(this);
