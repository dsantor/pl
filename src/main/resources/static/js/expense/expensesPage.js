// Generated by CoffeeScript 1.12.7
(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  this.ExpensesPage = (function(superClass) {
    extend(ExpensesPage, superClass);

    function ExpensesPage(workerId) {
      ExpensesPage.__super__.constructor.call(this);
      this.pageHTML();
      if (workerId) {
        ExpenseService.getWorkerExpenses(workerId, null, this, this._expensesLoaded, this._expensesLoadedError);
      } else {
        ExpenseService.getAll(null, this, this._expensesLoaded, this._expensesLoadedError);
      }
      this.filterContainer = this.container.find('.js--filter--container');
      this.expensesContainer = this.container.find('.js--expenses--container');
      this.autoSuggestion = new AutoSuggestion(this, this.filterContainer, AutoSuggestion.EXPENSE_FILTER);
      this.filterAsInput = this.container.find('.js--filter--as');
      this.suggestionsContainer = this.container.find('.js--filter--suggestions');
      this.filterStatus = this.container.find('.js--filter--status');
      this.createExpenseDialog = new CreateExpenseDialog();
    }

    ExpensesPage.prototype.destroy = function() {
      var autoSuggestion;
      ExpensesPage.__super__.destroy.call(this);
      this.autoSuggestion.destroy();
      autoSuggestion = null;
      this.createExpenseDialog.destroy();
      return this.createExpenseDialog = null;
    };

    ExpensesPage.prototype._clickEventHandler = function(event) {
      var target;
      target = $(event.target);
      if (closest(target, '.js--create--expense')) {
        this.createExpenseDialog.show();
      }
    };

    ExpensesPage.prototype._expensesLoaded = function(response) {
      this.expenses = response.data;
      if (this.expenses.length === 0) {
        return this._renderEmptyState();
      } else {
        return this._renderExpensesHTML(this.expenses);
      }
    };

    ExpensesPage.prototype._customHTML = function() {
      return "<div> <nav class='nav justify-content-end pt-3'> <span class='nav-link span-a js--create--expense'>Kreiraj dažbinu</span> </nav> <div class='js--filter--container'> </div> <div class='js--expenses--container'> " + (ComponentsUtils.loadingPage()) + " </div> </div>";
    };

    ExpensesPage.prototype._renderEmptyState = function() {
      return this.expensesContainer.html(ComponentsUtils.emptyState('Nema dažbina'));
    };

    ExpensesPage.prototype._renderExpensesHTML = function(expenses) {
      var expense, html, i, innerHtml, len;
      innerHtml = "";
      for (i = 0, len = expenses.length; i < len; i++) {
        expense = expenses[i];
        innerHtml += "<div class='flex-table js--expense--row' data-bid-id=" + expense.id + "> <div class='flex-table-cell w-20'> <a href='#worker/" + expense.expenseCreatedBy + "'>" + expense.expenseCreatedByFullName + "</a> </div> <div class='flex-table-cell w-20'> <a href='#user/" + expense.moneyGivenBy + "'>" + expense.moneyGivenByFullName + "</a> </div> <div class='flex-table-cell w-20'> " + (ComponentsUtils.getTimeFromMillis(expense.moneyGivenAt)) + " </div> <div class='flex-table-cell w-20'>" + expense.sum + "</div> <div class='flex-table-cell w-20'>" + expense.purpose + "</div> </div>";
      }
      html = "<div class='hide'></div> <div class='flex-table'> <div class='flex-table-cell w-20'>Izručio novac</div> <div class='flex-table-cell w-20'>Primio novac</div> <div class='flex-table-cell w-20'>Datum</div> <div class='flex-table-cell w-20'>Suma</div> <div class='flex-table-cell w-20'>Svrha</div> </div> " + innerHtml + " </div>";
      this.expensesContainer.html(html);
      return {
        triggerFiterSumFrom: function() {
          return this._triggerFilter();
        },
        triggerFiterSumTo: function() {
          return this._triggerFilter();
        },
        _triggerFilter: function() {}
      };
    };

    return ExpensesPage;

  })(AbstractPage);

}).call(this);
