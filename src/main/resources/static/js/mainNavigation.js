// Generated by CoffeeScript 1.12.7
(function() {
  this.MainNavigation = (function() {
    function MainNavigation() {
      this.pages = {
        '#profile': 'profile',
        '#user': 'users',
        '#worker': 'workers',
        '#client': 'clients',
        '#order': 'orders',
        '#bids': 'bids',
        '#expens': 'expenses'
      };
      this.currentPageHash = null;
      this.currentPage = null;
      this.pageTitle = $('.js--page--title');
      this.navigationBar = $('.js--nav--bar');
      this.container = $('.js--page--container');
      this.mainNavigation = $('.js--main--navigation');
      this.mainNavigation.on('click', this._mainNavigationHandler.bind(this));
      this._restrictPage();
      this._savePreviousPage('#profile');
      $(window).on('hashchange', this._hashChangedHandler.bind(this));
      if (window.location.hash === '') {
        this._redirectToHomepage();
      } else {
        this._handlePage();
      }
    }

    MainNavigation.prototype._handlePage = function() {
      var hashValue, i, key, keys, len, tab;
      hashValue = this._extractHashValue();
      this.currentPageHash = hashValue.page;
      this._openPage(hashValue);
      tab = '';
      keys = Object.keys(this.pages);
      for (i = 0, len = keys.length; i < len; i++) {
        key = keys[i];
        if (hashValue.page.startsWith(key)) {
          tab = this.pages[key];
          break;
        }
      }
      return this._handleNavigationButtons(tab);
    };

    MainNavigation.prototype._hashChangedHandler = function(event) {
      this._savePreviousPage(this.currentPageHash);
      if (this.currentPage) {
        this.currentPage.destroy();
      }
      this._handlePage();
      return document.title = this.currentPage.getPageTitle();
    };

    MainNavigation.prototype._openPage = function(hash) {
      switch (hash.page) {
        case '#profile':
          this.currentPage = new UserProfile();
          break;
        case '#users':
          this.currentPage = new UsersPage();
          break;
        case '#user':
          this.currentPage = new UserPage(hash.value);
          break;
        case '#workers':
          this.currentPage = new WorkersPage();
          break;
        case '#worker':
          this.currentPage = new WorkerPage(hash.value);
          break;
        case "#client/" + hash.data:
          this.currentPage = new OrdersPage(hash.value);
          break;
        case '#clients':
          this.currentPage = new ClientsPage();
          break;
        case '#client':
          this.currentPage = new ClientProfilePage(hash.value);
          break;
        case '#bids':
          this.currentPage = new BidsPage(hash.value);
          break;
        case '#orders':
          this.currentPage = new OrdersPage();
          break;
        case '#order':
          this.currentPage = new OrderPage(hash.value);
          break;
        case '#expenses':
          this.currentPage = new ExpensesPage(hash.value);
          break;
        default:
          this._redirectToErrorPage();
      }
    };

    MainNavigation.prototype._restrictPage = function() {
      var onlyAdmin;
      if (!window.loggedUserInfo.isAdmin) {
        onlyAdmin = $('.js--admin--only');
        return onlyAdmin.remove();
      }
    };

    MainNavigation.prototype._handleNavigationButtons = function(tab) {
      $('.js--nav--item').removeClass('active');
      return $(".js--nav--item[data-tab=" + tab + "]").addClass('active');
    };

    MainNavigation.prototype._redirectToHomepage = function() {
      return window.location.hash = "#profile";
    };

    MainNavigation.prototype._redirectToErrorPage = function() {
      window.location.hash = '';
      return window.location.pathname = "/error-404";
    };

    MainNavigation.prototype._mainNavigationHandler = function(event) {
      return this.mainNavigation.toggleClass('open');
    };

    MainNavigation.prototype._extractHashValue = function() {
      var dash, dashes, data, hash, page, value;
      hash = window.location.hash;
      dashes = hash.split('/');
      if (dashes.length > 2) {
        data = hash.substring(hash.indexOf('/') + 1);
        value = data.substring(0, data.indexOf('/'));
        return {
          page: hash,
          data: data,
          value: value
        };
      }
      dash = hash.indexOf('/');
      page = hash;
      value = null;
      if (dash > 0) {
        page = hash.substring(0, dash);
        value = hash.substring(dash + 1);
      }
      return {
        page: page,
        data: '',
        value: value
      };
    };

    MainNavigation.back = function() {
      return window.location.hash = window.previousPageHash;
    };

    MainNavigation.prototype._savePreviousPage = function(hash) {
      return window.previousPageHash = hash;
    };

    return MainNavigation;

  })();

  $(document).ready(function() {
    return new MainNavigation();
  });

}).call(this);
