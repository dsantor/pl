// Generated by CoffeeScript 1.12.7
(function() {
  this.ClientsPage = (function() {
    function ClientsPage() {
      this.container = $('.js--page--container');
      this.clickEvent = this._clickEventHandler.bind(this);
      this.container.on('click', this.clickEvent);
      ClientService.getAll(null, this, this._renderClients, this._renderClientsError);
      this.createdNewClient = this._createdNewClient.bind(this);
      EventUtils.bindCreatedNewClient(this.createdNewClient);
      this.createClientDialog = new CreateClientDialog();
      this.showClientDialog = new ShowClientDialog();
      this.clients = [];
    }

    ClientsPage.prototype.destroy = function() {
      this.container.off('click', this.clickEvent);
      this.clickEvent = null;
      EventUtils.unbindCreatedNewClient(this.createdNewClient);
      this.createdNewClient = null;
      this.createClientDialog.destroy();
      this.createClientDialog = null;
      this.showClientDialog.destroy();
      this.showClientDialog = null;
      this.clients = null;
      return this.container.html('');
    };

    ClientsPage.prototype.getPageTitle = function() {
      return "Klijenti";
    };

    ClientsPage.prototype._renderClients = function(response) {
      this.clients = response.data;
      if (this.clients && this.clients.length > 0) {
        return this._renderClientsHTML(this.clients);
      } else {
        return this._renderEmptyState();
      }
    };

    ClientsPage.prototype._renderClientsError = function(response) {
      return console.log(response);
    };

    ClientsPage.prototype._renderEmptyState = function() {
      var html;
      html = "<div class='col-5 m-auto h-75 pt-5 text-center'>Nema registrovanih klijenata :(</div> <div class='pt-3'><input type='button' class='btn btn-primary d-block js--create--client' value='Dodaj klijenta'/> </div>";
      return this.container.html(html);
    };

    ClientsPage.prototype._renderClientsHTML = function(clients) {
      var client, firstName, i, lastName, len, mobileNumber, phoneNumber, rowHtml, tableHtml;
      tableHtml = "<nav class='nav justify-content-end pt-3'> <span class='nav-link span-a js--create--client'>Dodaj klijenta</span> </nav> <div> <table class='table mb-0'> <tr> <th class='table-text w-10'>Profil</th> <th class='table-text w-15'>Ime</th> <th class='table-text w-20'>Prezime</th> <th class='table-text w-15'>Telefon</th> <th class='table-text w-20'>Mobilni</th> <th class='table-text w-20'>Email</th> </tr> </table> <table class='table table-striped'>";
      rowHtml = "";
      for (i = 0, len = clients.length; i < len; i++) {
        client = clients[i];
        firstName = client.firstName || '/';
        lastName = client.lastName || '/';
        phoneNumber = client.phoneNumber || '/';
        mobileNumber = client.mobileNumber || '/';
        rowHtml = "<tr class='js--client--row' data-client-id=" + client.id + "> <td class='table-text w-10'> <span class='client-details-icon js--show--client' data-client-id=" + client.id + "></span> </td> <td class='table-text w-15'>" + firstName + "</td> <td class='table-text w-20'>" + lastName + "</td> <td class='table-text w-15'>" + phoneNumber + "</td> <td class='table-text w-20'>" + mobileNumber + "</td> <td class='table-text w-20'>" + client.email + "</td> </tr>";
        tableHtml += rowHtml;
      }
      tableHtml += "</table></div>";
      return this.container.html(tableHtml);
    };

    ClientsPage.prototype._clickEventHandler = function(event) {
      var target;
      target = $(event.target);
      if (this._closest(target, ".js--create--client")) {
        this.createClientDialog.show();
        return;
      }
      if (this._closest(target, '.js--show--client')) {
        this.showClientDialog.show(target.attr('data-client-id'));
      }
    };

    ClientsPage.prototype._closest = function(target, closestTo) {
      return target.closest(closestTo).length > 0;
    };

    ClientsPage.prototype._refreshClientsHTML = function() {
      return this._renderClientsHTML(this.clients);
    };

    ClientsPage.prototype._addNewClient = function(client) {
      return this.clients.push(client);
    };

    ClientsPage.prototype._createdNewClient = function(event, client) {
      this._addNewClient(client);
      return this._refreshClientsHTML();
    };

    return ClientsPage;

  })();

}).call(this);
