// Generated by CoffeeScript 1.12.7
(function() {
  this.CreateClientDialog = (function() {
    function CreateClientDialog() {
      this.container = $('.js--side--dialog--container');
      this.clickEvent = this._clickEventHandler.bind(this);
      this.container.on('click', this.clickEvent);
    }

    CreateClientDialog.prototype.getPageTitle = function() {
      return 'Create user';
    };

    CreateClientDialog.prototype.show = function() {
      this.container.attr('visibility', true);
      this.container.html(this._html());
      this.negativeButton = this.container.find("." + ComponentsUtils.NEGATIVE_BUTTON);
      this.positiveButton = this.container.find("." + ComponentsUtils.POSITIVE_BUTTON);
      this.firstName = this.container.find('.js--firstName');
      this.lastName = this.container.find('.js--lastName');
      this.street = this.container.find('.js--street');
      this.buildNumber = this.container.find('.js--buildNumber');
      this.city = this.container.find('.js--city');
      this.phoneNumber = this.container.find('.js--phoneNumber');
      this.email = this.container.find('.js--email');
      return this.password = this.container.find('.js--password');
    };

    CreateClientDialog.prototype.hide = function() {
      return this.container.attr('visibility', false);
    };

    CreateClientDialog.prototype.destroy = function() {
      this.container.off('click', this.clickEvent);
      this.clickEvent = null;
      this.negativeButton = null;
      this.positiveButton = null;
      this.container.html('');
      this.firstName = null;
      this.lastName = null;
      this.street = null;
      this.buildNumber = null;
      this.city = null;
      this.phoneNumber = null;
      this.email = null;
      return this.password = null;
    };

    CreateClientDialog.prototype._html = function() {
      return "<div class='col-7 m-auto h-75 pt-5 flex'> <div class='container w-50'> <div class='form-group'> <label>Email*</label> <input type='email' class='form-control js--email' placeholder='email'/> </div> <div class='form-group'> <label>Ime</label> <input type='text' class='form-control js--firstName' placeholder='ime'/> </div> <div class='form-group'> <label>Prezime</label> <input type='text' class='form-control js--lastName' placeholder='prezime'/> </div> <div class='form-group'> <label>Ulica</label> <input type='text' class='form-control js--street' placeholder='ulica'/> </div> </div> <div class='container w-50'> <div class='form-group'> <label>Broj stana</label> <input type='text' class='form-control js--buildNumber' placeholder='broj kuce/stana'/> </div> <div class='form-group'> <label>Grad</label> <input type='text' class='form-control js--city' placeholder='grad'/> </div> <div class='form-group'> <label>Telefon</label> <input type='tel' class='form-control js--phoneNumber' placeholder='telefon'/> </div> <div class='form-group form-inline form-inline-btns-mt'> <button class='btn btn-lg btn-light btn-block w-50 " + ComponentsUtils.NEGATIVE_BUTTON + "' value='Izmeni'>Otkazi</button> <button class='btn btn-lg btn-primary btn-block w-50 " + ComponentsUtils.POSITIVE_BUTTON + "' value='Izmeni'>Kreiraj</button> </div> </div> </div>";
    };

    CreateClientDialog.prototype._clickEventHandler = function(event) {
      var element, target;
      target = $(event.target);
      element = target.closest(this.negativeButton);
      if (element.length !== 0) {
        this.hide();
        return;
      }
      element = target.closest(this.positiveButton);
      if (element.length !== 0) {
        this._saveClient();
      }
    };

    CreateClientDialog.prototype._saveClient = function() {
      var buildNumber, city, data, email, firstName, lastName, mobileValid, phoneNumber, phoneValid, street, valid;
      valid = true;
      phoneValid = true;
      mobileValid = true;
      firstName = this.firstName.val().trim();
      lastName = this.lastName.val().trim();
      street = this.street.val().trim();
      buildNumber = this.buildNumber.val().trim();
      city = this.city.val().trim();
      phoneNumber = this.phoneNumber.val().trim();
      email = this.email.val().trim();
      if (firstName === '') {
        this.firstName.addClass(ComponentsUtils.CSS_INVALID_INPUT);
        valid = false;
      } else {
        this.firstName.removeClass(ComponentsUtils.CSS_INVALID_INPUT);
      }
      if (lastName === '') {
        this.lastName.addClass(ComponentsUtils.CSS_INVALID_INPUT);
        valid = false;
      } else {
        this.lastName.removeClass(ComponentsUtils.CSS_INVALID_INPUT);
      }
      if (Validation.phone(phoneNumber)) {
        this.phoneNumber.removeClass(ComponentsUtils.CSS_INVALID_INPUT);
      } else {
        valid = false;
        this.phoneNumber.addClass(ComponentsUtils.CSS_INVALID_INPUT);
      }
      if (!valid) {
        return;
      }
      data = {
        firstName: firstName,
        lastName: lastName,
        street: street,
        buildNumber: buildNumber,
        city: city,
        phoneNumber: phoneNumber,
        email: email
      };
      ClientService.save(data, null, this, this._saveClientSuccess, this._saveClientError);
      return this.hide();
    };

    CreateClientDialog.prototype._saveClientSuccess = function(response) {
      FloatingMessage.success("Kreiran klijent " + response.data.firstName + "  " + response.data.lastName);
      return EventUtils.triggerCreatedNewClient(response.data);
    };

    CreateClientDialog.prototype._saveClientError = function(response) {
      return FloatingMessage.error(response.message);
    };

    return CreateClientDialog;

  })();

}).call(this);
